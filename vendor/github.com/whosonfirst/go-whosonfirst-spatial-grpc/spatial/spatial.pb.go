// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.8
// source: spatial/spatial.proto

package spatial

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExistentialFlag int32

const (
	ExistentialFlag_FALSE   ExistentialFlag = 0
	ExistentialFlag_TRUE    ExistentialFlag = 1
	ExistentialFlag_UNKNOWN ExistentialFlag = -1
)

// Enum value maps for ExistentialFlag.
var (
	ExistentialFlag_name = map[int32]string{
		0:  "FALSE",
		1:  "TRUE",
		-1: "UNKNOWN",
	}
	ExistentialFlag_value = map[string]int32{
		"FALSE":   0,
		"TRUE":    1,
		"UNKNOWN": -1,
	}
)

func (x ExistentialFlag) Enum() *ExistentialFlag {
	p := new(ExistentialFlag)
	*p = x
	return p
}

func (x ExistentialFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExistentialFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_spatial_spatial_proto_enumTypes[0].Descriptor()
}

func (ExistentialFlag) Type() protoreflect.EnumType {
	return &file_spatial_spatial_proto_enumTypes[0]
}

func (x ExistentialFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExistentialFlag.Descriptor instead.
func (ExistentialFlag) EnumDescriptor() ([]byte, []int) {
	return file_spatial_spatial_proto_rawDescGZIP(), []int{0}
}

type PointInPolygonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude            float32           `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude           float32           `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Placetypes          []string          `protobuf:"bytes,3,rep,name=placetypes,proto3" json:"placetypes,omitempty"`
	Geometries          string            `protobuf:"bytes,4,opt,name=geometries,proto3" json:"geometries,omitempty"`
	AlternateGeometries []string          `protobuf:"bytes,5,rep,name=alternate_geometries,json=alternateGeometries,proto3" json:"alternate_geometries,omitempty"`
	IsCurrent           []ExistentialFlag `protobuf:"varint,6,rep,packed,name=is_current,json=isCurrent,proto3,enum=ExistentialFlag" json:"is_current,omitempty"`
	IsCeased            []ExistentialFlag `protobuf:"varint,7,rep,packed,name=is_ceased,json=isCeased,proto3,enum=ExistentialFlag" json:"is_ceased,omitempty"`
	IsDeprecated        []ExistentialFlag `protobuf:"varint,8,rep,packed,name=is_deprecated,json=isDeprecated,proto3,enum=ExistentialFlag" json:"is_deprecated,omitempty"`
	IsSuperseding       []ExistentialFlag `protobuf:"varint,9,rep,packed,name=is_superseding,json=isSuperseding,proto3,enum=ExistentialFlag" json:"is_superseding,omitempty"`
	IsSuperseded        []ExistentialFlag `protobuf:"varint,10,rep,packed,name=is_superseded,json=isSuperseded,proto3,enum=ExistentialFlag" json:"is_superseded,omitempty"`
	InceptionDate       string            `protobuf:"bytes,11,opt,name=inception_date,json=inceptionDate,proto3" json:"inception_date,omitempty"`
	CessationDate       string            `protobuf:"bytes,12,opt,name=cessation_date,json=cessationDate,proto3" json:"cessation_date,omitempty"`
	Sort                []string          `protobuf:"bytes,13,rep,name=sort,proto3" json:"sort,omitempty"`
	Properties          []string          `protobuf:"bytes,14,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PointInPolygonRequest) Reset() {
	*x = PointInPolygonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spatial_spatial_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointInPolygonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointInPolygonRequest) ProtoMessage() {}

func (x *PointInPolygonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spatial_spatial_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointInPolygonRequest.ProtoReflect.Descriptor instead.
func (*PointInPolygonRequest) Descriptor() ([]byte, []int) {
	return file_spatial_spatial_proto_rawDescGZIP(), []int{0}
}

func (x *PointInPolygonRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *PointInPolygonRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *PointInPolygonRequest) GetPlacetypes() []string {
	if x != nil {
		return x.Placetypes
	}
	return nil
}

func (x *PointInPolygonRequest) GetGeometries() string {
	if x != nil {
		return x.Geometries
	}
	return ""
}

func (x *PointInPolygonRequest) GetAlternateGeometries() []string {
	if x != nil {
		return x.AlternateGeometries
	}
	return nil
}

func (x *PointInPolygonRequest) GetIsCurrent() []ExistentialFlag {
	if x != nil {
		return x.IsCurrent
	}
	return nil
}

func (x *PointInPolygonRequest) GetIsCeased() []ExistentialFlag {
	if x != nil {
		return x.IsCeased
	}
	return nil
}

func (x *PointInPolygonRequest) GetIsDeprecated() []ExistentialFlag {
	if x != nil {
		return x.IsDeprecated
	}
	return nil
}

func (x *PointInPolygonRequest) GetIsSuperseding() []ExistentialFlag {
	if x != nil {
		return x.IsSuperseding
	}
	return nil
}

func (x *PointInPolygonRequest) GetIsSuperseded() []ExistentialFlag {
	if x != nil {
		return x.IsSuperseded
	}
	return nil
}

func (x *PointInPolygonRequest) GetInceptionDate() string {
	if x != nil {
		return x.InceptionDate
	}
	return ""
}

func (x *PointInPolygonRequest) GetCessationDate() string {
	if x != nil {
		return x.CessationDate
	}
	return ""
}

func (x *PointInPolygonRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PointInPolygonRequest) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type StandardPlaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId      string          `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Placetype     string          `protobuf:"bytes,3,opt,name=placetype,proto3" json:"placetype,omitempty"`
	Country       string          `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Repo          string          `protobuf:"bytes,5,opt,name=repo,proto3" json:"repo,omitempty"`
	Path          string          `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Uri           string          `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	Latitude      float32         `protobuf:"fixed32,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32         `protobuf:"fixed32,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	IsCurrent     ExistentialFlag `protobuf:"varint,10,opt,name=is_current,json=isCurrent,proto3,enum=ExistentialFlag" json:"is_current,omitempty"`
	IsCeased      ExistentialFlag `protobuf:"varint,11,opt,name=is_ceased,json=isCeased,proto3,enum=ExistentialFlag" json:"is_ceased,omitempty"`
	IsDeprecated  ExistentialFlag `protobuf:"varint,12,opt,name=is_deprecated,json=isDeprecated,proto3,enum=ExistentialFlag" json:"is_deprecated,omitempty"`
	IsSuperseded  ExistentialFlag `protobuf:"varint,13,opt,name=is_superseded,json=isSuperseded,proto3,enum=ExistentialFlag" json:"is_superseded,omitempty"`
	IsSuperseding ExistentialFlag `protobuf:"varint,14,opt,name=is_superseding,json=isSuperseding,proto3,enum=ExistentialFlag" json:"is_superseding,omitempty"`
	InceptionDate string          `protobuf:"bytes,15,opt,name=inception_date,json=inceptionDate,proto3" json:"inception_date,omitempty"`
	CessationDate string          `protobuf:"bytes,16,opt,name=cessation_date,json=cessationDate,proto3" json:"cessation_date,omitempty"`
	MinLatitude   float32         `protobuf:"fixed32,17,opt,name=min_latitude,json=minLatitude,proto3" json:"min_latitude,omitempty"`
	MinLongitude  float32         `protobuf:"fixed32,18,opt,name=min_longitude,json=minLongitude,proto3" json:"min_longitude,omitempty"`
	MaxLatitude   float32         `protobuf:"fixed32,19,opt,name=max_latitude,json=maxLatitude,proto3" json:"max_latitude,omitempty"`
	MaxLongitude  float32         `protobuf:"fixed32,20,opt,name=max_longitude,json=maxLongitude,proto3" json:"max_longitude,omitempty"`
	SupersededBy  []int64         `protobuf:"varint,21,rep,packed,name=superseded_by,json=supersededBy,proto3" json:"superseded_by,omitempty"`
	Supersedes    []int64         `protobuf:"varint,22,rep,packed,name=supersedes,proto3" json:"supersedes,omitempty"`
	BelongsTo     []int64         `protobuf:"varint,23,rep,packed,name=belongs_to,json=belongsTo,proto3" json:"belongs_to,omitempty"`
	LastModified  int64           `protobuf:"varint,24,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Name          string          `protobuf:"bytes,25,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StandardPlaceResponse) Reset() {
	*x = StandardPlaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spatial_spatial_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardPlaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardPlaceResponse) ProtoMessage() {}

func (x *StandardPlaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spatial_spatial_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardPlaceResponse.ProtoReflect.Descriptor instead.
func (*StandardPlaceResponse) Descriptor() ([]byte, []int) {
	return file_spatial_spatial_proto_rawDescGZIP(), []int{1}
}

func (x *StandardPlaceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StandardPlaceResponse) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *StandardPlaceResponse) GetPlacetype() string {
	if x != nil {
		return x.Placetype
	}
	return ""
}

func (x *StandardPlaceResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *StandardPlaceResponse) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *StandardPlaceResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StandardPlaceResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *StandardPlaceResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *StandardPlaceResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *StandardPlaceResponse) GetIsCurrent() ExistentialFlag {
	if x != nil {
		return x.IsCurrent
	}
	return ExistentialFlag_FALSE
}

func (x *StandardPlaceResponse) GetIsCeased() ExistentialFlag {
	if x != nil {
		return x.IsCeased
	}
	return ExistentialFlag_FALSE
}

func (x *StandardPlaceResponse) GetIsDeprecated() ExistentialFlag {
	if x != nil {
		return x.IsDeprecated
	}
	return ExistentialFlag_FALSE
}

func (x *StandardPlaceResponse) GetIsSuperseded() ExistentialFlag {
	if x != nil {
		return x.IsSuperseded
	}
	return ExistentialFlag_FALSE
}

func (x *StandardPlaceResponse) GetIsSuperseding() ExistentialFlag {
	if x != nil {
		return x.IsSuperseding
	}
	return ExistentialFlag_FALSE
}

func (x *StandardPlaceResponse) GetInceptionDate() string {
	if x != nil {
		return x.InceptionDate
	}
	return ""
}

func (x *StandardPlaceResponse) GetCessationDate() string {
	if x != nil {
		return x.CessationDate
	}
	return ""
}

func (x *StandardPlaceResponse) GetMinLatitude() float32 {
	if x != nil {
		return x.MinLatitude
	}
	return 0
}

func (x *StandardPlaceResponse) GetMinLongitude() float32 {
	if x != nil {
		return x.MinLongitude
	}
	return 0
}

func (x *StandardPlaceResponse) GetMaxLatitude() float32 {
	if x != nil {
		return x.MaxLatitude
	}
	return 0
}

func (x *StandardPlaceResponse) GetMaxLongitude() float32 {
	if x != nil {
		return x.MaxLongitude
	}
	return 0
}

func (x *StandardPlaceResponse) GetSupersededBy() []int64 {
	if x != nil {
		return x.SupersededBy
	}
	return nil
}

func (x *StandardPlaceResponse) GetSupersedes() []int64 {
	if x != nil {
		return x.Supersedes
	}
	return nil
}

func (x *StandardPlaceResponse) GetBelongsTo() []int64 {
	if x != nil {
		return x.BelongsTo
	}
	return nil
}

func (x *StandardPlaceResponse) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *StandardPlaceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StandardPlacesResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Places []*StandardPlaceResponse `protobuf:"bytes,1,rep,name=places,proto3" json:"places,omitempty"`
}

func (x *StandardPlacesResults) Reset() {
	*x = StandardPlacesResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spatial_spatial_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardPlacesResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardPlacesResults) ProtoMessage() {}

func (x *StandardPlacesResults) ProtoReflect() protoreflect.Message {
	mi := &file_spatial_spatial_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardPlacesResults.ProtoReflect.Descriptor instead.
func (*StandardPlacesResults) Descriptor() ([]byte, []int) {
	return file_spatial_spatial_proto_rawDescGZIP(), []int{2}
}

func (x *StandardPlacesResults) GetPlaces() []*StandardPlaceResponse {
	if x != nil {
		return x.Places
	}
	return nil
}

var File_spatial_spatial_proto protoreflect.FileDescriptor

var file_spatial_spatial_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x04, 0x0a, 0x15, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x61,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x6c, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x52, 0x09, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x52, 0x08, 0x69, 0x73, 0x43, 0x65, 0x61, 0x73, 0x65, 0x64, 0x12, 0x35,
	0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x73, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52,
	0x0d, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x35,
	0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x73, 0x65, 0x64, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x65, 0x73, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x73, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xf2, 0x06, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x63, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x08, 0x69, 0x73, 0x43, 0x65, 0x61, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x35, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x73, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x65, 0x73, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x78, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x15, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64,
	0x65, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73,
	0x65, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x5f,
	0x74, 0x6f, 0x18, 0x17, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67,
	0x73, 0x54, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x15,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x2a, 0x3c, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x32, 0x99, 0x01, 0x0a, 0x07, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x42, 0x0a, 0x0e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x14, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x68,
	0x6f, 0x73, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2d, 0x77, 0x68, 0x6f,
	0x73, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x2d, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spatial_spatial_proto_rawDescOnce sync.Once
	file_spatial_spatial_proto_rawDescData = file_spatial_spatial_proto_rawDesc
)

func file_spatial_spatial_proto_rawDescGZIP() []byte {
	file_spatial_spatial_proto_rawDescOnce.Do(func() {
		file_spatial_spatial_proto_rawDescData = protoimpl.X.CompressGZIP(file_spatial_spatial_proto_rawDescData)
	})
	return file_spatial_spatial_proto_rawDescData
}

var file_spatial_spatial_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spatial_spatial_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_spatial_spatial_proto_goTypes = []interface{}{
	(ExistentialFlag)(0),          // 0: ExistentialFlag
	(*PointInPolygonRequest)(nil), // 1: PointInPolygonRequest
	(*StandardPlaceResponse)(nil), // 2: StandardPlaceResponse
	(*StandardPlacesResults)(nil), // 3: StandardPlacesResults
}
var file_spatial_spatial_proto_depIdxs = []int32{
	0,  // 0: PointInPolygonRequest.is_current:type_name -> ExistentialFlag
	0,  // 1: PointInPolygonRequest.is_ceased:type_name -> ExistentialFlag
	0,  // 2: PointInPolygonRequest.is_deprecated:type_name -> ExistentialFlag
	0,  // 3: PointInPolygonRequest.is_superseding:type_name -> ExistentialFlag
	0,  // 4: PointInPolygonRequest.is_superseded:type_name -> ExistentialFlag
	0,  // 5: StandardPlaceResponse.is_current:type_name -> ExistentialFlag
	0,  // 6: StandardPlaceResponse.is_ceased:type_name -> ExistentialFlag
	0,  // 7: StandardPlaceResponse.is_deprecated:type_name -> ExistentialFlag
	0,  // 8: StandardPlaceResponse.is_superseded:type_name -> ExistentialFlag
	0,  // 9: StandardPlaceResponse.is_superseding:type_name -> ExistentialFlag
	2,  // 10: StandardPlacesResults.places:type_name -> StandardPlaceResponse
	1,  // 11: Spatial.PointInPolygon:input_type -> PointInPolygonRequest
	1,  // 12: Spatial.PointInPolygonStream:input_type -> PointInPolygonRequest
	3,  // 13: Spatial.PointInPolygon:output_type -> StandardPlacesResults
	2,  // 14: Spatial.PointInPolygonStream:output_type -> StandardPlaceResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_spatial_spatial_proto_init() }
func file_spatial_spatial_proto_init() {
	if File_spatial_spatial_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spatial_spatial_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointInPolygonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spatial_spatial_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardPlaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spatial_spatial_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardPlacesResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spatial_spatial_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spatial_spatial_proto_goTypes,
		DependencyIndexes: file_spatial_spatial_proto_depIdxs,
		EnumInfos:         file_spatial_spatial_proto_enumTypes,
		MessageInfos:      file_spatial_spatial_proto_msgTypes,
	}.Build()
	File_spatial_spatial_proto = out.File
	file_spatial_spatial_proto_rawDesc = nil
	file_spatial_spatial_proto_goTypes = nil
	file_spatial_spatial_proto_depIdxs = nil
}
